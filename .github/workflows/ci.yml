name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  TAG: "${{ github.run_number }}-${{ github.sha }}"

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read infrastructure
        run: |
          bin/terraform init
          infrastructure_json=$(bin/terraform output -json deployment_target)
          echo "INFRASTRUCTURE_JSON=$infrastructure_json" >> $GITHUB_ENV

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ fromJSON(env.INFRASTRUCTURE_JSON).registry_url }}

      - name: Build
        run: |
          bin/build "$TAG"

      - name: Push
        run: |
          bin/push "$TAG"

  test:
    needs: build
    runs-on: ubuntu-20.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read infrastructure
        run: |
          bin/terraform init
          infrastructure_json=$(bin/terraform output -json deployment_target)
          echo "INFRASTRUCTURE_JSON=$infrastructure_json" >> $GITHUB_ENV

      - name: Login to ECR
        uses: docker/login-action@v1 
        with:
          registry: ${{ fromJSON(env.INFRASTRUCTURE_JSON).registry_url }}

      - name: Test
        run: |
          echo "::add-matcher::.github/matchers/jest.json"
          docker run --rm "${{ fromJSON(env.INFRASTRUCTURE_JSON).registry_url }}/cdsandbox-test:$TAG"
          echo "::remove-matcher owner=jest::"

  deploy:
    environment: production
    needs: test
    runs-on: ubuntu-20.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read infrastructure
        run: |
          bin/terraform init
          infrastructure_json=$(bin/terraform output -json deployment_target)
          echo "INFRASTRUCTURE_JSON=$infrastructure_json" >> $GITHUB_ENV

      - name: Login to ECR
        uses: docker/login-action@v1 
        with:
          registry: ${{ fromJSON(env.INFRASTRUCTURE_JSON).registry_url }}

      - name: Deploy
        run: |
          bin/deploy "$TAG"
